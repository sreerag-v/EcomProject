// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"Ecom/pkg/api"
	"Ecom/pkg/api/handler/admin"
	"Ecom/pkg/api/handler/user"
	"Ecom/pkg/config"
	"Ecom/pkg/db"
	"Ecom/pkg/helper"
	"Ecom/pkg/repository/admin"
	"Ecom/pkg/repository/user"
	"Ecom/pkg/usecase/admin"
	"Ecom/pkg/usecase/user"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*httpserver.ServerHttp, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	interfacesAdminRepo := adminRepo.NewAdminRepo(gormDB)
	interfacesHelper := helper.NewHelper(cfg)
	interfacesAdminUsecase := adminUsecase.NewAdminUsecase(interfacesAdminRepo, interfacesHelper)
	adminHandlerAdminHandler := adminHandler.NewAdminHandler(interfacesAdminUsecase)
	interfacesUserRepo := userRepo.NewUserRepo(gormDB)
	interfacesUserUsecase := userUsecase.NewUserUsecase(interfacesUserRepo, interfacesHelper)
	userHandlerUserHandler := userHandler.NewUserHandler(interfacesUserUsecase)
	productRepo := adminRepo.NewProductRepo(gormDB)
	productUsecase := adminUsecase.NewProductUsecase(productRepo)
	productHandler := adminHandler.NewProductHandler(productUsecase)
	orderRepo := userRepo.NewOrderRepo(gormDB)
	orderUsecase := userUsecase.NewOrderUsecase(orderRepo)
	orderHandler := userHandler.NewOrderHandler(orderUsecase)
	uProductRepo := userRepo.NewUProductRepo(gormDB)
	uProductUsecase := userUsecase.NewUProductUsecase(uProductRepo)
	uProductHandler := userHandler.NewUProductHandler(uProductUsecase)
	serverHttp := httpserver.NewServerHttp(adminHandlerAdminHandler, userHandlerUserHandler, productHandler, orderHandler, uProductHandler)
	return serverHttp, nil
}
